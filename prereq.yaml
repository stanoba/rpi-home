---
########################## Update alterantives #################################

 # update-alternatives --install /usr/bin/python python /usr/bin/python3 1
- hosts: all
  become: yes
  gather_facts: false
  tasks:
    - name: Link python to python3
      alternatives:
        name: python
        link: /usr/bin/python
        path: /usr/bin/python3
        priority: 1


############################# set /etc/hosts ###################################

- hosts: all
  become: yes
  gather_facts: true
  tasks:
    - name: Set hostname
      hostname: "name={{ inventory_hostname }}"
 
    - name: Clear /etc/hosts
      lineinfile:
        path: /etc/hosts
        state: absent
        regexp: '^'
        backup: yes

    - name: Set /etc/hosts
      lineinfile: 
        dest: /etc/hosts
        state: present
        line: "{{ item }}"
        backup: no
      with_items:
        - "127.0.0.1 localhost"
        - "{{ ansible_default_ipv4.address }} {{ inventory_hostname }} {{ inventory_hostname_short }}"

############################# SET /etc/environment ####################################

    - name: Updating /etc/environment
      lineinfile: 
        dest: /etc/environment
        state: present 
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^LANGUAGE=', line: "LANGUAGE={{ rpi_system_lang }}" }
        - { regexp: '^LC_ALL=', line: "LC_ALL={{ rpi_system_lang }}" }
        - { regexp: '^LANG=', line: "LANG={{ rpi_system_lang }}" }
        - { regexp: '^LC_TYPE=', line: "LC_TYPE={{ rpi_system_lang }}" }

############################# SET Raspi-Config ###################################

# https://github.com/giuaig/ansible-raspi-config/blob/master/raspi-config.yml

    - name: Change locale
      shell: "raspi-config nonint do_change_locale {{ rpi_locale }}" # en_US.UTF-8 sk_SK.UTF-8

    - name: Change timezone
      shell: "raspi-config nonint do_change_timezone {{ rpi_timezone }}"

    - name: Change keyboard layout
      shell: "raspi-config nonint do_configure_keyboard {{ rpi_keyboard }}"

    #- name: Set WiFi country
    #  shell: "raspi-config nonint do_wifi_country {{ rpi_wifi_country }}"

    - name: Set boot wait network status
      shell: "raspi-config nonint do_boot_wait 1"

    - name: Enable i2c
      shell: "raspi-config nonint do_i2c 0"

    - name: Enable serial port / disable console
      shell: "raspi-config nonint do_serial 1"

    - name: Disable serial console service
      ansible.builtin.systemd:
        name: serial-getty@serial0.service
        enabled: no
        masked: yes

############################## SET /boot/config.txt ####################################

    - name: Updating /boot/config.txt
      lineinfile: 
        dest: /boot/config.txt
        state: present 
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^dtparam=i2c_arm', line: 'dtparam=i2c_arm=on' }
        - { regexp: '^dtparam=spi', line: 'dtparam=spi=on' }
        - { regexp: '^enable_uart=', line: 'enable_uart=1' }
        #- { regexp: '^dtoverlay=w1-gpio,gpiopin=4', line: 'dtoverlay=w1-gpio' }
        - { regexp: '^dtoverlay=disable-bt', line: 'dtoverlay=disable-bt' }
        - { regexp: '^dtoverlay=disable-wifi', line: 'dtoverlay=disable-wifi' }
        - { regexp: '^dtparam=audio', line: 'dtparam=audio=off' }
        - { regexp: '^gpu_mem', line: 'gpu_mem=16' }

    - name: Disable BT modem
      command: systemctl disable hciuart
      ignore_errors: yes

################################ SET .bashrc ######################################

    - name: Add code to .bashrc
      blockinfile:
        dest: /home/pi/.bashrc
        block: |
                stty -ixon # Disable CTRL-S (XOFF) functionality in terminal

                alias ll="ls -al"
                alias pcat="pygmentize -g"
                alias hcat="highlight -O ansi --force"

                alias g="git"

                ###################################################################################################################
                # Terminal colors
                txtblk='\e[0;30m' # Black - Regular
                txtred='\e[0;31m' # Red
                txtgrn='\e[0;32m' # Green
                txtylw='\e[0;33m' # Yellow
                txtblu='\e[0;34m' # Blue
                txtlblu='\e[0;94m' # Blue
                txtpur='\e[0;35m' # Purple
                txtcyn='\e[0;36m' # Cyan
                txtwht='\e[0;37m' # White
                bldblk='\e[1;30m' # Black - Bold
                bldred='\e[1;31m' # Red
                bldgrn='\e[1;32m' # Green
                bldylw='\e[1;33m' # Yellow
                bldblu='\e[1;34m' # Blue
                bldpur='\e[1;35m' # Purple
                bldcyn='\e[1;36m' # Cyan
                bldwht='\e[1;37m' # White
                unkblk='\e[4;30m' # Black - Underline
                undred='\e[4;31m' # Red
                undgrn='\e[4;32m' # Green
                undylw='\e[4;33m' # Yellow
                undblu='\e[4;34m' # Blue
                undpur='\e[4;35m' # Purple
                undcyn='\e[4;36m' # Cyan
                undwht='\e[4;37m' # White
                bakblk='\e[40m' # Black - Background
                bakred='\e[41m' # Red
                badgrn='\e[42m' # Green
                bakylw='\e[43m' # Yellow
                bakblu='\e[44m' # Blue
                bakpur='\e[45m' # Purple
                bakcyn='\e[46m' # Cyan
                bakwht='\e[47m' # White
                txtrst='\e[0m' # Text Reset


                # Git stuff in prompt
                function git_info {
                    git status > /dev/null 2>&1 || return
                    msg=$(git branch | perl -ne 'print "$_" if s/^\*\s+// && chomp')
                    status_lines=$(git status --porcelain | wc -l)
                    [[ $status_lines -ne 0 ]] && msg="$msg !"
                    git status | grep -q push && msg="$msg ^"
                    git status | grep -q pull && mgs="$msg v"
                    echo $msg
                }
                CURRENT_USER="$(id -un)"
                if [ $CURRENT_USER = "root" ]; then
                    PS1="\u@\H \W \[${bldred}\]% \[${txtrst}\]"
                else
                    # \[\] around colors are needed for mintty/cygwin
                    PS1="\u@\[${txtcyn}\]\H\[${txtrst}\]\n\w [\[${txtylw}\]\$(git_info)\[${txtrst}\]] \[${bldgrn}\]\$ \[${txtrst}\]"
                fi

                alias rolepull='find /data/ansible-roles/* -maxdepth 0 -type d -exec sh -c "echo \"\nRole {}\"; cd {} && git pull ; cd .." \;'
        marker: "# {mark} ANSIBLE MANAGED BLOCK"

################################ SET SSH keys ######################################

    - name: Creates /home/pi/.ssh/ directories
      file:
        path: /home/pi/.ssh/
        state: directory
        owner: pi
        group: pi

    - name: Add public keys to the target
      copy:
        dest: /home/pi/.ssh/authorized_keys
        content: |
          {{ rpi_ssh_key }}
      tags:
        - ssh_keys

################################ SET serial ports ######################################


    - name: Add pi user to dialout and tty group
      command: usermod -a -G dialout,tty pi

    - name: Redirect serial port
      blockinfile:
        path: /etc/rc.local
        marker: "### -- {mark} ANSIBLE MANAGED BLOCK -- ###"
        insertbefore: "exit 0"
        block: sudo ln -s /dev/ttyAMA0 /dev/ttyUSB-ZWave

    # Get detail by command: udevadm info -a -p  $(udevadm info -q path -n /dev/ttyUSB1) | grep -A 50 -i 'KERNELS=="1-1.3"'
    - name: USB persistent rules
      copy:
        dest: /etc/udev/rules.d/99-usb-serial.rules
        content: |
          SUBSYSTEM=="tty", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6001", ATTRS{serial}=="A50285BI", OWNER="domoticz", SYMLINK+="ttyUSB-OTG"
          SUBSYSTEM=="tty", ATTRS{idVendor}=="1a86", ATTRS{idProduct}=="7523", OWNER="domoticz", SYMLINK+="ttyUSB-RF-Link"

########################### Install apt packages ###############################

- hosts: all
  become: yes
  gather_facts: true
  tasks:
    - name: Add log2ram repository key.
      apt_key:
        url: "https://azlux.fr/repo.gpg.key"
        state: present

    - name: Add log2ram repository to sources list
      apt_repository:
        repo: deb http://packages.azlux.fr/debian/ buster main
        state: present

    - name: Install basic packages
      apt:
        state: present 
        allow_unauthenticated: yes
        update_cache: yes
        name:
          - apt-transport-https
          - ca-certificates
          - log2ram

- hosts: all
  become: yes
  gather_facts: true
  tasks:
    - name: Install list of packages
      apt:
        state: present 
        allow_unauthenticated: yes
        update_cache: yes
        name:
          - mc
          - git
          - htop
          - iotop
          - atop
          - iftop
          - fio
          - ioping
          - jq
          - vim
          - uuid-runtime
          - pwgen
          - python3-pip
          - python3-setuptools
          - build-essential
          - python3-dev
          - python3-smbus
          - i2c-tools
          - python3-pil
          - python3-rpi.gpio
          - mosquitto
          - mosquitto-clients
          - libmosquitto-dev
          - highlight
          - locales-all
          - apache2


    - name: Link pip to pip3
      alternatives:
        name: pip
        link: /usr/bin/pip
        path: /usr/bin/pip3
        priority: 1

    - name: Install list of PIP packages
      pip:
        state: latest
        name:
          - RPi.GPIO
          - Image
          - Pygments
          - Adafruit-SSD1306
          - Adafruit_BBIO

    - name: Upgrade the OS
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: "86400" #One day

    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes


#################################### END #######################################
